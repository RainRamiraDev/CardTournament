{
  "QueryGetAll": "SELECT * FROM T_TOURNAMENTS;",
  "QueryCreateTournament": "INSERT INTO T_TOURNAMENTS (id_country, id_organizer, start_datetime, current_phase) VALUES (@IdCountry, @IdOrganizer, @StartDatetime, @CurrentPhase); SELECT LAST_INSERT_ID();",
  "QueryInsertJudges": "INSERT INTO T_TOURN_JUDGES (id_tournament, id_judge) VALUES (@id_tournament, @id_judge);",
  "QueryGetJudgeByAlias": "SELECT id_user FROM T_USERS WHERE alias IN @Aliases AND Id_rol = 3;",
  "QueryAvailableTournaments": "SELECT t.start_datetime, t.end_datetime, c.country_name AS tournament_country, u.alias AS organizer_alias, GROUP_CONCAT(DISTINCT j.fullname SEPARATOR ', ') AS judges, GROUP_CONCAT(DISTINCT s.series_name SEPARATOR ', ') AS series_played, GROUP_CONCAT(DISTINCT p.fullname SEPARATOR ', ') AS players, GROUP_CONCAT(DISTINCT d.fullname SEPARATOR ', ') AS disqualified_players, COUNT(DISTINCT g.id_game) AS total_games, COUNT(DISTINCT r.id_round) AS total_rounds FROM T_TOURNAMENTS t LEFT JOIN T_COUNTRIES c ON t.id_country = c.id_country LEFT JOIN T_USERS u ON t.id_organizer = u.id_user LEFT JOIN T_TOURN_JUDGES tj ON t.id_tournament = tj.id_tournament LEFT JOIN T_USERS j ON tj.id_judge = j.id_user LEFT JOIN T_TOURN_SERIES ts ON t.id_tournament = ts.id_tournament LEFT JOIN T_SERIES s ON ts.id_series = s.id_series LEFT JOIN T_TOURN_PLAYERS tp ON t.id_tournament = tp.id_tournament LEFT JOIN T_USERS p ON tp.id_player = p.id_user LEFT JOIN T_TOURN_DISQUALIFICATIONS td ON t.id_tournament = td.id_tournament LEFT JOIN T_USERS d ON td.id_player = d.id_user LEFT JOIN T_GAMES g ON t.id_tournament = g.id_tournament LEFT JOIN T_MATCHES m ON g.id_game = m.id_game LEFT JOIN T_ROUNDS r ON m.id_round = r.id_round WHERE t.current_phase = 1 GROUP BY t.start_datetime, t.end_datetime, t.current_phase, c.country_name, u.fullname, u.alias, u.email;",
  "QueryInsertSeries": "INSERT INTO T_TOURN_SERIES (id_tournament, id_series) VALUES (@id_tournament, @id_series);",
  "QueryInsertDecks": "INSERT INTO T_TOURN_DECKS (id_tournament, id_card_series, id_owner) VALUES (@id_tournament, @id_card_series, @id_owner);",
  "QueryInsertPlayers": "INSERT INTO T_TOURN_PLAYERS (id_tournament, id_player) VALUES (@Id_tournament,@id_player);",
  "QuerySetTournamentNextPhase": "UPDATE T_TOURNAMENTS SET current_phase = current_phase + 1 WHERE id_tournament = @id_tournament AND current_phase < 3;",
  "QueryGetCurrentPhase": "SELECT current_phase FROM T_TOURNAMENTS WHERE id_tournament = @id_tournament;",
  "QueryTournamentExist": "SELECT COUNT(1) FROM T_TOURNAMENTS WHERE id_tournament = @id_tournament;"
}
